#!/bin/zsh

UPGRADE_PIP=0

remove_venv() {
  # delete environment
  TARGET_DIR="$1";
  if [ -d "$TARGET_DIR" ]; then
    echo "Removing $TARGET_DIR";
    rm -rf $TARGET_DIR;
    return
  else
    printf "No directory found"
  fi
}
make_env() {
  # Make the env if it doesn't exist
  if [ ! -f "${1}/bin/activate" ]; then
    echo "Creating ${1}";
    mkdir -p "$1";
    $(which python3) -m venv "$1";
    UPGRADE_PIP=1
  fi
}
_install_pip_dev_tools(){
  # install additional tools for debugging
  if [[ $UPGRADE_PIP == 1 ]]; then
    $(which pip) install --upgrade pip 'python-language-server[yapf]' neovim ipdb;
  fi
}
_install_requirements() {
  $(which pip) install -r requirements.txt;
}
active_env() {
  if [ -d $TARGET ]; then
    # Activate the env
    echo "Activating ${TARGET}";
    source "${TARGET}/bin/activate";
  fi
}
main() {
  if [[ "$1" == "--help" ]] || [[ "$1" == "-h" ]]; then
    echo "Usage:"
    echo "venv <option> (default: slim + dev)"
    echo ""
    echo "Options:"
    echo "-             to deactive"
    echo "rm or remove  to remove"
    echo "slim          for minimal setup"
    echo "req           to active and install packages in requirements.txt"
    echo "dev           to install tools for development and debugging"
    return
  fi
  # Deactivate any existing virtualenv
  if [ "$VIRTUAL_ENV" ]; then
    if [ "$(command -v deactivate)" ]; then
      echo "Deactivating $VIRTUAL_ENV...";
      deactivate;
    else
      unset VIRTUAL_ENV;
    fi
  fi
  local TARGET="";
  if [[ "$1" == "local" ]] || [[ -d "$PWD/venv" ]]; then
    TARGET="$PWD/venv";
  else
    TARGET="$HOME/envs/$PWD";
  fi

  case $1 in
    "-")
      return ;;
    "local")
      make_env $TARGET ;
      active_env;;
    "rm"|"remove")
      remove_venv $TARGET;
      return;;
    "slim")
      make_env $TARGET;
      active_env;;
    "req")
      active_env;
      _install_requirements;
      return;;
    "dev")
      UPGRADE_PIP=1;
      active_env;
      _install_pip_dev_tools;
      return;;
    *)
      make_env $TARGET;
      active_env;
      _install_pip_dev_tools;;
  esac
}

main "$@";
